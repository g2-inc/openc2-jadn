image: gitlab.labs.g2-inc.net:4567/screamingbunny/docker/plus:alpine-python3

variables:
  GIT_SSL_NO_VERIFY: "true"
  JQ_LINUX64: https://github.com/stedolan/jq/releases/download/jq-1.5/jq-linux64
  PKG_DIR: package
  PKG_NAME: oc2
  PYTHON_ENV: bunnybuilder
  VERSION_FILE: $PKG_DIR/version.json

before_script:
  - apk add --no-cache build-base libxml2 rsync wget
  - if [ ! -f /tmp/jq ]; then wget $JQ_LINUX64 -qO /tmp/jq; chmod 755 /tmp/jq; fi
  # Configure Version file
  - echo "$(/tmp/jq --arg NUM ${CI_PIPELINE_ID} '.version.pipe_number=$NUM' $VERSION_FILE)" > $VERSION_FILE
  - echo "$(/tmp/jq --arg SHA_HASH ${CI_COMMIT_SHA:0:8} '.version.hash=$SHA_HASH' $VERSION_FILE)" > $VERSION_FILE
  - echo "$(/tmp/jq --arg DATE $(date +%Y-%m-%d) '.version.date=$DATE' $VERSION_FILE)" > $VERSION_FILE
  - echo "$(/tmp/jq --arg PKG ${PKG_NAME} '.pkg_name=$PKG' $VERSION_FILE)" > $VERSION_FILE
  # Configure Python Env
  - pip3 install -r $PKG_DIR/requirements.txt
  - rsync -avz --delete ./jadn/libs/* ./$PKG_DIR/$PKG_NAME

# Copy and edit this stage for Unit/Code Testing
Translate-Schemas:
  stage: test

  script:
    - cd jadn
    - python3 schema-translators.py
    - mv ./schema_gen_test/openc2-* ../

  artifacts:
    name: "JADN_Translations.${CI_PIPELINE_ID}_${CI_COMMIT_SHA:0:8}"
    expire_in: 2 weeks
    paths:
     - ./openc2-*


Build-Wheel:
  stage: deploy

  script:
    - cd $PKG_DIR
    - pip3 wheel . -w ./dist
    - mv ./dist/*.whl ../

  artifacts:
    name: "JADN_Python.${CI_PIPELINE_ID}_${CI_COMMIT_SHA:0:8}"
    expire_in: 2 weeks
    paths:
     - ./*.whl
