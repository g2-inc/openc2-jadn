# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: openc2.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import any_pb2 as google_dot_protobuf_dot_any__pb2
from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='openc2.proto',
  package='openc2',
  syntax='proto3',
  serialized_pb=_b('\n\x0copenc2.proto\x12\x06openc2\x1a\x19google/protobuf/any.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xa8\x01\n\rOpenC2Command\x12\n\n\x02id\x18\x01 \x01(\t\x12\x1e\n\x06\x61\x63tion\x18\x02 \x01(\x0e\x32\x0e.openc2.Action\x12\x1e\n\x06target\x18\x03 \x01(\x0b\x32\x0e.openc2.Target\x12\"\n\x08\x61\x63tuator\x18\x04 \x01(\x0b\x32\x10.openc2.Actuator\x12\'\n\x07options\x18\x05 \x01(\x0b\x32\x16.openc2.CommandOptions\"w\n\x0eOpenC2Response\x12\n\n\x02id\x18\x01 \x01(\t\x12\"\n\x06status\x18\x02 \x01(\x0e\x32\x12.openc2.StatusCode\x12\x13\n\x0bstatus_text\x18\x03 \x01(\t\x12 \n\x07results\x18\x04 \x03(\x0b\x32\x0f.openc2.Results\"=\n\x05Media\x12\x12\n\nmedia_type\x18\x01 \x01(\t\x12 \n\x07payload\x18\x02 \x01(\x0b\x32\x0f.openc2.Payload\";\n\x12\x41\x63tuatorSpecifiers\x12\x13\n\x0b\x61\x63tuator_id\x18\x01 \x01(\t\x12\x10\n\x08\x61sset_id\x18\x02 \x01(\t\"d\n\x08\x41rtifact\x12\x11\n\tmime_type\x18\x01 \x01(\t\x12%\n\x07payload\x18\x02 \x01(\x0b\x32\x14.google.protobuf.Any\x12\x1e\n\x06hashes\x18\x03 \x01(\x0b\x32\x0e.openc2.hashes\"\x88\x01\n\rIP_Connection\x12\x10\n\x08src_addr\x18\x01 \x01(\t\x12\x10\n\x08src_port\x18\x02 \x01(\t\x12\x10\n\x08\x64st_addr\x18\x03 \x01(\t\x12\x10\n\x08\x64st_port\x18\x04 \x01(\t\x12/\n\x0flayer4_protocol\x18\x05 \x01(\x0e\x32\x16.openc2.Layer4Protocol\"F\n\x07Results\x12\x10\n\x06string\x18\x01 \x01(\tH\x00\x12\x1e\n\x05media\x18\x02 \x01(\x0b\x32\r.openc2.MediaH\x00\x42\t\n\x07results\"\xa6\x04\n\x06Target\x12\x12\n\x08\x61rtifact\x18\x01 \x01(\tH\x00\x12\x11\n\x07\x63ommand\x18\x02 \x01(\tH\x00\x12\x10\n\x06\x64\x65vice\x18\x03 \x01(\tH\x00\x12\x13\n\tdirectory\x18\x04 \x01(\tH\x00\x12\x0e\n\x04\x64isk\x18\x05 \x01(\tH\x00\x12\x18\n\x0e\x64isk_partition\x18\x06 \x01(\tH\x00\x12\x15\n\x0b\x64omain_name\x18\x07 \x01(\tH\x00\x12\x14\n\nemail_addr\x18\x08 \x01(\tH\x00\x12\x17\n\remail_message\x18\t \x01(\tH\x00\x12\x0e\n\x04\x66ile\x18\n \x01(\tH\x00\x12\x13\n\tipv4_addr\x18\x0b \x01(\tH\x00\x12\x13\n\tipv6_addr\x18\x0c \x01(\tH\x00\x12\x12\n\x08mac_addr\x18\r \x01(\tH\x00\x12\x10\n\x06memory\x18\x0e \x01(\tH\x00\x12.\n\rip_connection\x18\x0f \x01(\x0b\x32\x15.openc2.IP_ConnectionH\x00\x12\x10\n\x06openc2\x18\x10 \x01(\tH\x00\x12\x11\n\x07process\x18\x11 \x01(\tH\x00\x12\x12\n\x08software\x18\x12 \x01(\tH\x00\x12\r\n\x03uri\x18\x13 \x01(\tH\x00\x12\x16\n\x0cuser_account\x18\x14 \x01(\tH\x00\x12\x16\n\x0cuser_session\x18\x15 \x01(\tH\x00\x12\x10\n\x06volume\x18\x16 \x01(\tH\x00\x12\x1e\n\x14windows_registry_key\x18\x17 \x01(\tH\x00\x12\x1a\n\x10x509_certificate\x18\x18 \x01(\tH\x00\x42\x08\n\x06target\"q\n\x08\x41\x63tuator\x12)\n\x03\x61ny\x18\x01 \x01(\x0b\x32\x1a.openc2.ActuatorSpecifiersH\x00\x12.\n\x08\x66irewall\x18\x02 \x01(\x0b\x32\x1a.openc2.ActuatorSpecifiersH\x00\x42\n\n\x08\x61\x63tuator\":\n\x07Payload\x12\x15\n\x0bpayload_bin\x18\x01 \x01(\tH\x00\x12\r\n\x03url\x18\x02 \x01(\tH\x00\x42\t\n\x07payload\"\xc7\x01\n\x0e\x43ommandOptions\x12.\n\nstart_time\x18\x01 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12,\n\x08\x65nd_time\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x11\n\tdutartion\x18\x03 \x01(\x03\x12\x30\n\x12response_requested\x18\x04 \x01(\x0e\x32\x14.openc2.ResponseType\x12\x12\n\ncommand_id\x18\x05 \x01(\t\"\xf4\x01\n\x06hashes\x12\x0b\n\x03MD5\x18\x01 \x01(\t\x12\x0b\n\x03MD6\x18\x02 \x01(\t\x12\x12\n\nRIPEMD_160\x18\x03 \x01(\t\x12\r\n\x05SHA_1\x18\x04 \x01(\t\x12\x0f\n\x07SHA_224\x18\x05 \x01(\t\x12\x0f\n\x07SHA_256\x18\x06 \x01(\t\x12\x0f\n\x07SHA_384\x18\x07 \x01(\t\x12\x0f\n\x07SHA_512\x18\x08 \x01(\t\x12\x10\n\x08SHA3_224\x18\t \x01(\t\x12\x10\n\x08SHA3_256\x18\n \x01(\t\x12\x10\n\x08SHA3_384\x18\x0b \x01(\t\x12\x10\n\x08SHA3_512\x18\x0c \x01(\t\x12\x0e\n\x06ssdeep\x18\r \x01(\t\x12\x11\n\tWHIRLPOOL\x18\x0e \x01(\t\"\xa0\x01\n\x06\x64\x65vice\x12\x13\n\x0b\x64\x65scription\x18\x01 \x01(\t\x12\x13\n\x0b\x64\x65vice_type\x18\x02 \x01(\t\x12\x14\n\x0cmanufacturer\x18\x03 \x01(\t\x12\r\n\x05model\x18\x04 \x01(\t\x12\x15\n\rserial_number\x18\x05 \x01(\t\x12\x18\n\x10\x66irmware_version\x18\x06 \x01(\t\x12\x16\n\x0esystem_details\x18\x07 \x01(\t\"h\n\x04\x66ile\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0c\n\x04path\x18\x02 \x01(\t\x12\x1c\n\x04hash\x18\x03 \x01(\x0b\x32\x0e.openc2.hashes\x12&\n\nreputation\x18\x04 \x01(\x0e\x32\x12.openc2.Reputation*\x9e\x03\n\x06\x41\x63tion\x12\x11\n\rUnknownAction\x10\x00\x12\x08\n\x04Scan\x10\x01\x12\n\n\x06Locate\x10\x02\x12\t\n\x05Query\x10\x03\x12\n\n\x06Report\x10\x04\x12\n\n\x06Notify\x10\x05\x12\x08\n\x04\x44\x65ny\x10\x06\x12\x0b\n\x07\x43ontain\x10\x07\x12\t\n\x05\x41llow\x10\x08\x12\t\n\x05Start\x10\t\x12\x08\n\x04Stop\x10\n\x12\x0b\n\x07Restart\x10\x0b\x12\t\n\x05Pause\x10\x0c\x12\n\n\x06Resume\x10\r\x12\n\n\x06\x63\x61ncel\x10\x0e\x12\x07\n\x03Set\x10\x0f\x12\n\n\x06Update\x10\x10\x12\x08\n\x04Move\x10\x11\x12\x0c\n\x08Redirect\x10\x12\x12\n\n\x06\x43reate\x10\x13\x12\n\n\x06\x44\x65lete\x10\x14\x12\x0c\n\x08Snapshot\x10\x15\x12\x0c\n\x08\x44\x65tonate\x10\x16\x12\x0b\n\x07Restore\x10\x17\x12\x08\n\x04Save\x10\x18\x12\x0c\n\x08Throttle\x10\x19\x12\t\n\x05\x44\x65lay\x10\x1a\x12\x0e\n\nSubstitute\x10\x1b\x12\x08\n\x04\x43opy\x10\x1c\x12\x08\n\x04Sync\x10\x1d\x12\x0f\n\x0bInvestigate\x10\x1e\x12\x0c\n\x08Mitigate\x10\x1f\x12\r\n\tRemediate\x10 *8\n\x0cResponseType\x12\x13\n\x0fUnknownResponse\x10\x00\x12\x07\n\x03\x41\x63k\x10\x01\x12\n\n\x06Status\x10\x02*\xaa\x01\n\nStatusCode\x12\x11\n\rUnknownStatus\x10\x00\x12\x0e\n\nProcessing\x10\x66\x12\x07\n\x02OK\x10\xc8\x01\x12\x15\n\x10MovedPermanently\x10\xad\x02\x12\x0f\n\nBadRequest\x10\x90\x03\x12\x11\n\x0cUnauthorized\x10\x91\x03\x12\x0e\n\tForbidden\x10\x93\x03\x12\x10\n\x0bServerError\x10\xf4\x03\x12\x13\n\x0eNotImplemented\x10\xf5\x03*\x9d\x01\n\nReputation\x12\n\n\x06NotSet\x10\x00\x12\n\n\x06\x42\x65nign\x10\x01\x12\x10\n\x0cLikelyBenign\x10\x02\x12\x12\n\x0ePossiblyBenign\x10\x03\x12\x11\n\rIndeterminate\x10\x04\x12\x15\n\x11PossiblyMalicious\x10\x05\x12\x13\n\x0fLikelyMalicious\x10\x06\x12\x12\n\x0eKnownMalicious\x10\x07*M\n\x0eLayer4Protocol\x12\x14\n\x10Unknown4Protocol\x10\x00\x12\x08\n\x04ICMP\x10\x01\x12\x07\n\x03TCP\x10\x06\x12\x07\n\x03UDP\x10\x11\x12\t\n\x04SCTP\x10\x84\x01*r\n\x0eLayer7Protocol\x12\x14\n\x10Unknown7Protocol\x10\x00\x12\x0c\n\x08\x46TP_DATA\x10\x14\x12\x07\n\x03\x46TP\x10\x15\x12\x07\n\x03SSH\x10\x16\x12\n\n\x06Telnet\x10\x17\x12\x08\n\x04SMTP\x10\x19\x12\x08\n\x04HTTP\x10P\x12\n\n\x05HTTPS\x10\xbb\x03\x62\x06proto3')
  ,
  dependencies=[google_dot_protobuf_dot_any__pb2.DESCRIPTOR,google_dot_protobuf_dot_timestamp__pb2.DESCRIPTOR,])

_ACTION = _descriptor.EnumDescriptor(
  name='Action',
  full_name='openc2.Action',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UnknownAction', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Scan', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Locate', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Query', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Report', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Notify', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Deny', index=6, number=6,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Contain', index=7, number=7,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Allow', index=8, number=8,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Start', index=9, number=9,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Stop', index=10, number=10,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Restart', index=11, number=11,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Pause', index=12, number=12,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Resume', index=13, number=13,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='cancel', index=14, number=14,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Set', index=15, number=15,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Update', index=16, number=16,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Move', index=17, number=17,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Redirect', index=18, number=18,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Create', index=19, number=19,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Delete', index=20, number=20,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Snapshot', index=21, number=21,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Detonate', index=22, number=22,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Restore', index=23, number=23,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Save', index=24, number=24,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Throttle', index=25, number=25,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Delay', index=26, number=26,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Substitute', index=27, number=27,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Copy', index=28, number=28,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Sync', index=29, number=29,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Investigate', index=30, number=30,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Mitigate', index=31, number=31,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Remediate', index=32, number=32,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=2260,
  serialized_end=2674,
)
_sym_db.RegisterEnumDescriptor(_ACTION)

Action = enum_type_wrapper.EnumTypeWrapper(_ACTION)
_RESPONSETYPE = _descriptor.EnumDescriptor(
  name='ResponseType',
  full_name='openc2.ResponseType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UnknownResponse', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Ack', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Status', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=2676,
  serialized_end=2732,
)
_sym_db.RegisterEnumDescriptor(_RESPONSETYPE)

ResponseType = enum_type_wrapper.EnumTypeWrapper(_RESPONSETYPE)
_STATUSCODE = _descriptor.EnumDescriptor(
  name='StatusCode',
  full_name='openc2.StatusCode',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UnknownStatus', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Processing', index=1, number=102,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OK', index=2, number=200,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MovedPermanently', index=3, number=301,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BadRequest', index=4, number=400,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Unauthorized', index=5, number=401,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Forbidden', index=6, number=403,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ServerError', index=7, number=500,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NotImplemented', index=8, number=501,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=2735,
  serialized_end=2905,
)
_sym_db.RegisterEnumDescriptor(_STATUSCODE)

StatusCode = enum_type_wrapper.EnumTypeWrapper(_STATUSCODE)
_REPUTATION = _descriptor.EnumDescriptor(
  name='Reputation',
  full_name='openc2.Reputation',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='NotSet', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Benign', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LikelyBenign', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PossiblyBenign', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Indeterminate', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PossiblyMalicious', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LikelyMalicious', index=6, number=6,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='KnownMalicious', index=7, number=7,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=2908,
  serialized_end=3065,
)
_sym_db.RegisterEnumDescriptor(_REPUTATION)

Reputation = enum_type_wrapper.EnumTypeWrapper(_REPUTATION)
_LAYER4PROTOCOL = _descriptor.EnumDescriptor(
  name='Layer4Protocol',
  full_name='openc2.Layer4Protocol',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='Unknown4Protocol', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ICMP', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TCP', index=2, number=6,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UDP', index=3, number=17,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SCTP', index=4, number=132,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=3067,
  serialized_end=3144,
)
_sym_db.RegisterEnumDescriptor(_LAYER4PROTOCOL)

Layer4Protocol = enum_type_wrapper.EnumTypeWrapper(_LAYER4PROTOCOL)
_LAYER7PROTOCOL = _descriptor.EnumDescriptor(
  name='Layer7Protocol',
  full_name='openc2.Layer7Protocol',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='Unknown7Protocol', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FTP_DATA', index=1, number=20,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FTP', index=2, number=21,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SSH', index=3, number=22,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Telnet', index=4, number=23,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SMTP', index=5, number=25,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='HTTP', index=6, number=80,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='HTTPS', index=7, number=443,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=3146,
  serialized_end=3260,
)
_sym_db.RegisterEnumDescriptor(_LAYER7PROTOCOL)

Layer7Protocol = enum_type_wrapper.EnumTypeWrapper(_LAYER7PROTOCOL)
UnknownAction = 0
Scan = 1
Locate = 2
Query = 3
Report = 4
Notify = 5
Deny = 6
Contain = 7
Allow = 8
Start = 9
Stop = 10
Restart = 11
Pause = 12
Resume = 13
cancel = 14
Set = 15
Update = 16
Move = 17
Redirect = 18
Create = 19
Delete = 20
Snapshot = 21
Detonate = 22
Restore = 23
Save = 24
Throttle = 25
Delay = 26
Substitute = 27
Copy = 28
Sync = 29
Investigate = 30
Mitigate = 31
Remediate = 32
UnknownResponse = 0
Ack = 1
Status = 2
UnknownStatus = 0
Processing = 102
OK = 200
MovedPermanently = 301
BadRequest = 400
Unauthorized = 401
Forbidden = 403
ServerError = 500
NotImplemented = 501
NotSet = 0
Benign = 1
LikelyBenign = 2
PossiblyBenign = 3
Indeterminate = 4
PossiblyMalicious = 5
LikelyMalicious = 6
KnownMalicious = 7
Unknown4Protocol = 0
ICMP = 1
TCP = 6
UDP = 17
SCTP = 132
Unknown7Protocol = 0
FTP_DATA = 20
FTP = 21
SSH = 22
Telnet = 23
SMTP = 25
HTTP = 80
HTTPS = 443



_OPENC2COMMAND = _descriptor.Descriptor(
  name='OpenC2Command',
  full_name='openc2.OpenC2Command',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='openc2.OpenC2Command.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='action', full_name='openc2.OpenC2Command.action', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='target', full_name='openc2.OpenC2Command.target', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='actuator', full_name='openc2.OpenC2Command.actuator', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='options', full_name='openc2.OpenC2Command.options', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=85,
  serialized_end=253,
)


_OPENC2RESPONSE = _descriptor.Descriptor(
  name='OpenC2Response',
  full_name='openc2.OpenC2Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='openc2.OpenC2Response.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='status', full_name='openc2.OpenC2Response.status', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='status_text', full_name='openc2.OpenC2Response.status_text', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='results', full_name='openc2.OpenC2Response.results', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=255,
  serialized_end=374,
)


_MEDIA = _descriptor.Descriptor(
  name='Media',
  full_name='openc2.Media',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='media_type', full_name='openc2.Media.media_type', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='payload', full_name='openc2.Media.payload', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=376,
  serialized_end=437,
)


_ACTUATORSPECIFIERS = _descriptor.Descriptor(
  name='ActuatorSpecifiers',
  full_name='openc2.ActuatorSpecifiers',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='actuator_id', full_name='openc2.ActuatorSpecifiers.actuator_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='asset_id', full_name='openc2.ActuatorSpecifiers.asset_id', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=439,
  serialized_end=498,
)


_ARTIFACT = _descriptor.Descriptor(
  name='Artifact',
  full_name='openc2.Artifact',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='mime_type', full_name='openc2.Artifact.mime_type', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='payload', full_name='openc2.Artifact.payload', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='hashes', full_name='openc2.Artifact.hashes', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=500,
  serialized_end=600,
)


_IP_CONNECTION = _descriptor.Descriptor(
  name='IP_Connection',
  full_name='openc2.IP_Connection',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='src_addr', full_name='openc2.IP_Connection.src_addr', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='src_port', full_name='openc2.IP_Connection.src_port', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='dst_addr', full_name='openc2.IP_Connection.dst_addr', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='dst_port', full_name='openc2.IP_Connection.dst_port', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='layer4_protocol', full_name='openc2.IP_Connection.layer4_protocol', index=4,
      number=5, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=603,
  serialized_end=739,
)


_RESULTS = _descriptor.Descriptor(
  name='Results',
  full_name='openc2.Results',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='string', full_name='openc2.Results.string', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='media', full_name='openc2.Results.media', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='results', full_name='openc2.Results.results',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=741,
  serialized_end=811,
)


_TARGET = _descriptor.Descriptor(
  name='Target',
  full_name='openc2.Target',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='artifact', full_name='openc2.Target.artifact', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='command', full_name='openc2.Target.command', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='device', full_name='openc2.Target.device', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='directory', full_name='openc2.Target.directory', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='disk', full_name='openc2.Target.disk', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='disk_partition', full_name='openc2.Target.disk_partition', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='domain_name', full_name='openc2.Target.domain_name', index=6,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='email_addr', full_name='openc2.Target.email_addr', index=7,
      number=8, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='email_message', full_name='openc2.Target.email_message', index=8,
      number=9, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='file', full_name='openc2.Target.file', index=9,
      number=10, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='ipv4_addr', full_name='openc2.Target.ipv4_addr', index=10,
      number=11, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='ipv6_addr', full_name='openc2.Target.ipv6_addr', index=11,
      number=12, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='mac_addr', full_name='openc2.Target.mac_addr', index=12,
      number=13, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='memory', full_name='openc2.Target.memory', index=13,
      number=14, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='ip_connection', full_name='openc2.Target.ip_connection', index=14,
      number=15, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='openc2', full_name='openc2.Target.openc2', index=15,
      number=16, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='process', full_name='openc2.Target.process', index=16,
      number=17, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='software', full_name='openc2.Target.software', index=17,
      number=18, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='uri', full_name='openc2.Target.uri', index=18,
      number=19, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='user_account', full_name='openc2.Target.user_account', index=19,
      number=20, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='user_session', full_name='openc2.Target.user_session', index=20,
      number=21, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='volume', full_name='openc2.Target.volume', index=21,
      number=22, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='windows_registry_key', full_name='openc2.Target.windows_registry_key', index=22,
      number=23, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='x509_certificate', full_name='openc2.Target.x509_certificate', index=23,
      number=24, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='target', full_name='openc2.Target.target',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=814,
  serialized_end=1364,
)


_ACTUATOR = _descriptor.Descriptor(
  name='Actuator',
  full_name='openc2.Actuator',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='any', full_name='openc2.Actuator.any', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='firewall', full_name='openc2.Actuator.firewall', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='actuator', full_name='openc2.Actuator.actuator',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=1366,
  serialized_end=1479,
)


_PAYLOAD = _descriptor.Descriptor(
  name='Payload',
  full_name='openc2.Payload',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='payload_bin', full_name='openc2.Payload.payload_bin', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='url', full_name='openc2.Payload.url', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='payload', full_name='openc2.Payload.payload',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=1481,
  serialized_end=1539,
)


_COMMANDOPTIONS = _descriptor.Descriptor(
  name='CommandOptions',
  full_name='openc2.CommandOptions',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='start_time', full_name='openc2.CommandOptions.start_time', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='end_time', full_name='openc2.CommandOptions.end_time', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='dutartion', full_name='openc2.CommandOptions.dutartion', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='response_requested', full_name='openc2.CommandOptions.response_requested', index=3,
      number=4, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='command_id', full_name='openc2.CommandOptions.command_id', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1542,
  serialized_end=1741,
)


_HASHES = _descriptor.Descriptor(
  name='hashes',
  full_name='openc2.hashes',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='MD5', full_name='openc2.hashes.MD5', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='MD6', full_name='openc2.hashes.MD6', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='RIPEMD_160', full_name='openc2.hashes.RIPEMD_160', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='SHA_1', full_name='openc2.hashes.SHA_1', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='SHA_224', full_name='openc2.hashes.SHA_224', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='SHA_256', full_name='openc2.hashes.SHA_256', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='SHA_384', full_name='openc2.hashes.SHA_384', index=6,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='SHA_512', full_name='openc2.hashes.SHA_512', index=7,
      number=8, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='SHA3_224', full_name='openc2.hashes.SHA3_224', index=8,
      number=9, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='SHA3_256', full_name='openc2.hashes.SHA3_256', index=9,
      number=10, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='SHA3_384', full_name='openc2.hashes.SHA3_384', index=10,
      number=11, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='SHA3_512', full_name='openc2.hashes.SHA3_512', index=11,
      number=12, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='ssdeep', full_name='openc2.hashes.ssdeep', index=12,
      number=13, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='WHIRLPOOL', full_name='openc2.hashes.WHIRLPOOL', index=13,
      number=14, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1744,
  serialized_end=1988,
)


_DEVICE = _descriptor.Descriptor(
  name='device',
  full_name='openc2.device',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='description', full_name='openc2.device.description', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='device_type', full_name='openc2.device.device_type', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='manufacturer', full_name='openc2.device.manufacturer', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='model', full_name='openc2.device.model', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='serial_number', full_name='openc2.device.serial_number', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='firmware_version', full_name='openc2.device.firmware_version', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='system_details', full_name='openc2.device.system_details', index=6,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1991,
  serialized_end=2151,
)


_FILE = _descriptor.Descriptor(
  name='file',
  full_name='openc2.file',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='openc2.file.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='path', full_name='openc2.file.path', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='hash', full_name='openc2.file.hash', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='reputation', full_name='openc2.file.reputation', index=3,
      number=4, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2153,
  serialized_end=2257,
)

_OPENC2COMMAND.fields_by_name['action'].enum_type = _ACTION
_OPENC2COMMAND.fields_by_name['target'].message_type = _TARGET
_OPENC2COMMAND.fields_by_name['actuator'].message_type = _ACTUATOR
_OPENC2COMMAND.fields_by_name['options'].message_type = _COMMANDOPTIONS
_OPENC2RESPONSE.fields_by_name['status'].enum_type = _STATUSCODE
_OPENC2RESPONSE.fields_by_name['results'].message_type = _RESULTS
_MEDIA.fields_by_name['payload'].message_type = _PAYLOAD
_ARTIFACT.fields_by_name['payload'].message_type = google_dot_protobuf_dot_any__pb2._ANY
_ARTIFACT.fields_by_name['hashes'].message_type = _HASHES
_IP_CONNECTION.fields_by_name['layer4_protocol'].enum_type = _LAYER4PROTOCOL
_RESULTS.fields_by_name['media'].message_type = _MEDIA
_RESULTS.oneofs_by_name['results'].fields.append(
  _RESULTS.fields_by_name['string'])
_RESULTS.fields_by_name['string'].containing_oneof = _RESULTS.oneofs_by_name['results']
_RESULTS.oneofs_by_name['results'].fields.append(
  _RESULTS.fields_by_name['media'])
_RESULTS.fields_by_name['media'].containing_oneof = _RESULTS.oneofs_by_name['results']
_TARGET.fields_by_name['ip_connection'].message_type = _IP_CONNECTION
_TARGET.oneofs_by_name['target'].fields.append(
  _TARGET.fields_by_name['artifact'])
_TARGET.fields_by_name['artifact'].containing_oneof = _TARGET.oneofs_by_name['target']
_TARGET.oneofs_by_name['target'].fields.append(
  _TARGET.fields_by_name['command'])
_TARGET.fields_by_name['command'].containing_oneof = _TARGET.oneofs_by_name['target']
_TARGET.oneofs_by_name['target'].fields.append(
  _TARGET.fields_by_name['device'])
_TARGET.fields_by_name['device'].containing_oneof = _TARGET.oneofs_by_name['target']
_TARGET.oneofs_by_name['target'].fields.append(
  _TARGET.fields_by_name['directory'])
_TARGET.fields_by_name['directory'].containing_oneof = _TARGET.oneofs_by_name['target']
_TARGET.oneofs_by_name['target'].fields.append(
  _TARGET.fields_by_name['disk'])
_TARGET.fields_by_name['disk'].containing_oneof = _TARGET.oneofs_by_name['target']
_TARGET.oneofs_by_name['target'].fields.append(
  _TARGET.fields_by_name['disk_partition'])
_TARGET.fields_by_name['disk_partition'].containing_oneof = _TARGET.oneofs_by_name['target']
_TARGET.oneofs_by_name['target'].fields.append(
  _TARGET.fields_by_name['domain_name'])
_TARGET.fields_by_name['domain_name'].containing_oneof = _TARGET.oneofs_by_name['target']
_TARGET.oneofs_by_name['target'].fields.append(
  _TARGET.fields_by_name['email_addr'])
_TARGET.fields_by_name['email_addr'].containing_oneof = _TARGET.oneofs_by_name['target']
_TARGET.oneofs_by_name['target'].fields.append(
  _TARGET.fields_by_name['email_message'])
_TARGET.fields_by_name['email_message'].containing_oneof = _TARGET.oneofs_by_name['target']
_TARGET.oneofs_by_name['target'].fields.append(
  _TARGET.fields_by_name['file'])
_TARGET.fields_by_name['file'].containing_oneof = _TARGET.oneofs_by_name['target']
_TARGET.oneofs_by_name['target'].fields.append(
  _TARGET.fields_by_name['ipv4_addr'])
_TARGET.fields_by_name['ipv4_addr'].containing_oneof = _TARGET.oneofs_by_name['target']
_TARGET.oneofs_by_name['target'].fields.append(
  _TARGET.fields_by_name['ipv6_addr'])
_TARGET.fields_by_name['ipv6_addr'].containing_oneof = _TARGET.oneofs_by_name['target']
_TARGET.oneofs_by_name['target'].fields.append(
  _TARGET.fields_by_name['mac_addr'])
_TARGET.fields_by_name['mac_addr'].containing_oneof = _TARGET.oneofs_by_name['target']
_TARGET.oneofs_by_name['target'].fields.append(
  _TARGET.fields_by_name['memory'])
_TARGET.fields_by_name['memory'].containing_oneof = _TARGET.oneofs_by_name['target']
_TARGET.oneofs_by_name['target'].fields.append(
  _TARGET.fields_by_name['ip_connection'])
_TARGET.fields_by_name['ip_connection'].containing_oneof = _TARGET.oneofs_by_name['target']
_TARGET.oneofs_by_name['target'].fields.append(
  _TARGET.fields_by_name['openc2'])
_TARGET.fields_by_name['openc2'].containing_oneof = _TARGET.oneofs_by_name['target']
_TARGET.oneofs_by_name['target'].fields.append(
  _TARGET.fields_by_name['process'])
_TARGET.fields_by_name['process'].containing_oneof = _TARGET.oneofs_by_name['target']
_TARGET.oneofs_by_name['target'].fields.append(
  _TARGET.fields_by_name['software'])
_TARGET.fields_by_name['software'].containing_oneof = _TARGET.oneofs_by_name['target']
_TARGET.oneofs_by_name['target'].fields.append(
  _TARGET.fields_by_name['uri'])
_TARGET.fields_by_name['uri'].containing_oneof = _TARGET.oneofs_by_name['target']
_TARGET.oneofs_by_name['target'].fields.append(
  _TARGET.fields_by_name['user_account'])
_TARGET.fields_by_name['user_account'].containing_oneof = _TARGET.oneofs_by_name['target']
_TARGET.oneofs_by_name['target'].fields.append(
  _TARGET.fields_by_name['user_session'])
_TARGET.fields_by_name['user_session'].containing_oneof = _TARGET.oneofs_by_name['target']
_TARGET.oneofs_by_name['target'].fields.append(
  _TARGET.fields_by_name['volume'])
_TARGET.fields_by_name['volume'].containing_oneof = _TARGET.oneofs_by_name['target']
_TARGET.oneofs_by_name['target'].fields.append(
  _TARGET.fields_by_name['windows_registry_key'])
_TARGET.fields_by_name['windows_registry_key'].containing_oneof = _TARGET.oneofs_by_name['target']
_TARGET.oneofs_by_name['target'].fields.append(
  _TARGET.fields_by_name['x509_certificate'])
_TARGET.fields_by_name['x509_certificate'].containing_oneof = _TARGET.oneofs_by_name['target']
_ACTUATOR.fields_by_name['any'].message_type = _ACTUATORSPECIFIERS
_ACTUATOR.fields_by_name['firewall'].message_type = _ACTUATORSPECIFIERS
_ACTUATOR.oneofs_by_name['actuator'].fields.append(
  _ACTUATOR.fields_by_name['any'])
_ACTUATOR.fields_by_name['any'].containing_oneof = _ACTUATOR.oneofs_by_name['actuator']
_ACTUATOR.oneofs_by_name['actuator'].fields.append(
  _ACTUATOR.fields_by_name['firewall'])
_ACTUATOR.fields_by_name['firewall'].containing_oneof = _ACTUATOR.oneofs_by_name['actuator']
_PAYLOAD.oneofs_by_name['payload'].fields.append(
  _PAYLOAD.fields_by_name['payload_bin'])
_PAYLOAD.fields_by_name['payload_bin'].containing_oneof = _PAYLOAD.oneofs_by_name['payload']
_PAYLOAD.oneofs_by_name['payload'].fields.append(
  _PAYLOAD.fields_by_name['url'])
_PAYLOAD.fields_by_name['url'].containing_oneof = _PAYLOAD.oneofs_by_name['payload']
_COMMANDOPTIONS.fields_by_name['start_time'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_COMMANDOPTIONS.fields_by_name['end_time'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_COMMANDOPTIONS.fields_by_name['response_requested'].enum_type = _RESPONSETYPE
_FILE.fields_by_name['hash'].message_type = _HASHES
_FILE.fields_by_name['reputation'].enum_type = _REPUTATION
DESCRIPTOR.message_types_by_name['OpenC2Command'] = _OPENC2COMMAND
DESCRIPTOR.message_types_by_name['OpenC2Response'] = _OPENC2RESPONSE
DESCRIPTOR.message_types_by_name['Media'] = _MEDIA
DESCRIPTOR.message_types_by_name['ActuatorSpecifiers'] = _ACTUATORSPECIFIERS
DESCRIPTOR.message_types_by_name['Artifact'] = _ARTIFACT
DESCRIPTOR.message_types_by_name['IP_Connection'] = _IP_CONNECTION
DESCRIPTOR.message_types_by_name['Results'] = _RESULTS
DESCRIPTOR.message_types_by_name['Target'] = _TARGET
DESCRIPTOR.message_types_by_name['Actuator'] = _ACTUATOR
DESCRIPTOR.message_types_by_name['Payload'] = _PAYLOAD
DESCRIPTOR.message_types_by_name['CommandOptions'] = _COMMANDOPTIONS
DESCRIPTOR.message_types_by_name['hashes'] = _HASHES
DESCRIPTOR.message_types_by_name['device'] = _DEVICE
DESCRIPTOR.message_types_by_name['file'] = _FILE
DESCRIPTOR.enum_types_by_name['Action'] = _ACTION
DESCRIPTOR.enum_types_by_name['ResponseType'] = _RESPONSETYPE
DESCRIPTOR.enum_types_by_name['StatusCode'] = _STATUSCODE
DESCRIPTOR.enum_types_by_name['Reputation'] = _REPUTATION
DESCRIPTOR.enum_types_by_name['Layer4Protocol'] = _LAYER4PROTOCOL
DESCRIPTOR.enum_types_by_name['Layer7Protocol'] = _LAYER7PROTOCOL
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

OpenC2Command = _reflection.GeneratedProtocolMessageType('OpenC2Command', (_message.Message,), dict(
  DESCRIPTOR = _OPENC2COMMAND,
  __module__ = 'openc2_pb2'
  # @@protoc_insertion_point(class_scope:openc2.OpenC2Command)
  ))
_sym_db.RegisterMessage(OpenC2Command)

OpenC2Response = _reflection.GeneratedProtocolMessageType('OpenC2Response', (_message.Message,), dict(
  DESCRIPTOR = _OPENC2RESPONSE,
  __module__ = 'openc2_pb2'
  # @@protoc_insertion_point(class_scope:openc2.OpenC2Response)
  ))
_sym_db.RegisterMessage(OpenC2Response)

Media = _reflection.GeneratedProtocolMessageType('Media', (_message.Message,), dict(
  DESCRIPTOR = _MEDIA,
  __module__ = 'openc2_pb2'
  # @@protoc_insertion_point(class_scope:openc2.Media)
  ))
_sym_db.RegisterMessage(Media)

ActuatorSpecifiers = _reflection.GeneratedProtocolMessageType('ActuatorSpecifiers', (_message.Message,), dict(
  DESCRIPTOR = _ACTUATORSPECIFIERS,
  __module__ = 'openc2_pb2'
  # @@protoc_insertion_point(class_scope:openc2.ActuatorSpecifiers)
  ))
_sym_db.RegisterMessage(ActuatorSpecifiers)

Artifact = _reflection.GeneratedProtocolMessageType('Artifact', (_message.Message,), dict(
  DESCRIPTOR = _ARTIFACT,
  __module__ = 'openc2_pb2'
  # @@protoc_insertion_point(class_scope:openc2.Artifact)
  ))
_sym_db.RegisterMessage(Artifact)

IP_Connection = _reflection.GeneratedProtocolMessageType('IP_Connection', (_message.Message,), dict(
  DESCRIPTOR = _IP_CONNECTION,
  __module__ = 'openc2_pb2'
  # @@protoc_insertion_point(class_scope:openc2.IP_Connection)
  ))
_sym_db.RegisterMessage(IP_Connection)

Results = _reflection.GeneratedProtocolMessageType('Results', (_message.Message,), dict(
  DESCRIPTOR = _RESULTS,
  __module__ = 'openc2_pb2'
  # @@protoc_insertion_point(class_scope:openc2.Results)
  ))
_sym_db.RegisterMessage(Results)

Target = _reflection.GeneratedProtocolMessageType('Target', (_message.Message,), dict(
  DESCRIPTOR = _TARGET,
  __module__ = 'openc2_pb2'
  # @@protoc_insertion_point(class_scope:openc2.Target)
  ))
_sym_db.RegisterMessage(Target)

Actuator = _reflection.GeneratedProtocolMessageType('Actuator', (_message.Message,), dict(
  DESCRIPTOR = _ACTUATOR,
  __module__ = 'openc2_pb2'
  # @@protoc_insertion_point(class_scope:openc2.Actuator)
  ))
_sym_db.RegisterMessage(Actuator)

Payload = _reflection.GeneratedProtocolMessageType('Payload', (_message.Message,), dict(
  DESCRIPTOR = _PAYLOAD,
  __module__ = 'openc2_pb2'
  # @@protoc_insertion_point(class_scope:openc2.Payload)
  ))
_sym_db.RegisterMessage(Payload)

CommandOptions = _reflection.GeneratedProtocolMessageType('CommandOptions', (_message.Message,), dict(
  DESCRIPTOR = _COMMANDOPTIONS,
  __module__ = 'openc2_pb2'
  # @@protoc_insertion_point(class_scope:openc2.CommandOptions)
  ))
_sym_db.RegisterMessage(CommandOptions)

hashes = _reflection.GeneratedProtocolMessageType('hashes', (_message.Message,), dict(
  DESCRIPTOR = _HASHES,
  __module__ = 'openc2_pb2'
  # @@protoc_insertion_point(class_scope:openc2.hashes)
  ))
_sym_db.RegisterMessage(hashes)

device = _reflection.GeneratedProtocolMessageType('device', (_message.Message,), dict(
  DESCRIPTOR = _DEVICE,
  __module__ = 'openc2_pb2'
  # @@protoc_insertion_point(class_scope:openc2.device)
  ))
_sym_db.RegisterMessage(device)

file = _reflection.GeneratedProtocolMessageType('file', (_message.Message,), dict(
  DESCRIPTOR = _FILE,
  __module__ = 'openc2_pb2'
  # @@protoc_insertion_point(class_scope:openc2.file)
  ))
_sym_db.RegisterMessage(file)


# @@protoc_insertion_point(module_scope)
